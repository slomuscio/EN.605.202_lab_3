README file for EN.605.202 Lab 3

# Summary 
Code to generate a Huffman Tree from a frequency table and use it to encode/decode strings. 

# Usage 
To build and use the Huffman Tree, the user must run the driver.py script. 
This driver script will generate the Huffman Tree from the frequency table, output a preorder traversal of the tree, output the Huffman codes from the tree, read the input cases from the input file, and encode/decode them accordingly. 
This script will also write these output to the output file: input_output/output.txt. 


# How to Run   
1. EDITOR   
   Open the lab_3 directory in VSCode editor (or editor of choice).   
   Open driver.py and run the file.    

2. COMMAND LINE    
   cd to repo root directory   
   Run command: python driver.py    


# File/Directory Descriptions 
input_output/   
    - input.txt: Text file that contains various input cases (alphabetic and binary). One input per line.
    - output_example.txt: Example output text file that I generated by running driver.py. When user runs driver.py, the script will generate output.txt that will be saved in this directory. 
    - output.txt: Not initially included in this directory. This file will be generated once the user runs driver.py. Each time user runs driver.py, this file will be overwritten. 

src.py 
    - Contains source code functions for building the Huffman Tree, preorder traversal of the tree, Huffman code generation, encoding and decoding, and formatting output. 

HuffmanNode.py 
    - Contains class definition of a node of a Huffman Tree. 

driver.py 
    - Contains main driver function that reads input strings from input text file, encodes/decodes them, and writes output to input_output/output.text

# Notes
- I developed this code using Python version 3.10.9. 
- I wrote and tested this code using the VSCode editor. 
- Code developed on MacOS Monterey 12.6.8
- Code is on GitHub at this link: https://github.com/slomuscio/EN.605.202_lab_3
